<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>API on firebirdテクテクテクブログ</title>
        <link>https://firebird-techtalktech.com/tags/api/</link>
        <description>Recent content in API on firebirdテクテクテクブログ</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <copyright>トミー</copyright>
        <lastBuildDate>Sun, 14 Sep 2025 14:54:52 +0900</lastBuildDate><atom:link href="https://firebird-techtalktech.com/tags/api/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>📚 【Tips】Cloud Run に Next.js アプリをデプロイしたら OpenAI の Project API Key が 401 になった話と解決法</title>
        <link>https://firebird-techtalktech.com/post/tipscloud-run-%E3%81%AB-next.js-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%97%E3%81%9F%E3%82%89-openai-%E3%81%AE-project-api-key-%E3%81%8C-401-%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F%E8%A9%B1%E3%81%A8%E8%A7%A3%E6%B1%BA%E6%B3%95/</link>
        <pubDate>Sun, 14 Sep 2025 14:54:52 +0900</pubDate>
        
        <guid>https://firebird-techtalktech.com/post/tipscloud-run-%E3%81%AB-next.js-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%97%E3%81%9F%E3%82%89-openai-%E3%81%AE-project-api-key-%E3%81%8C-401-%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F%E8%A9%B1%E3%81%A8%E8%A7%A3%E6%B1%BA%E6%B3%95/</guid>
        <description>&lt;h2 id=&#34;記事概要&#34;&gt;記事概要
&lt;/h2&gt;&lt;h2 data-sourcepos=&#34;1:1-1:15&#34;&gt;
&lt;span id=&#34;はじめに&#34; class=&#34;fragment&#34;&gt;&lt;/span&gt;&lt;a href=&#34;#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;はじめに&lt;/h2&gt;
&lt;p data-sourcepos=&#34;2:1-2:296&#34;&gt;ローカルでは問題なく動いていたNext.jsアプリを、Google CloudのCloud Runにデプロイしたところ、作成したアプリ内で実装していたOpenAIのAPI呼び出しだけが &lt;code&gt;401 Incorrect API key provided&lt;/code&gt; になってしまうという問題に遭遇しました。&lt;/p&gt;
&lt;p data-sourcepos=&#34;4:1-4:17&#34;&gt;最終的には&lt;/p&gt;
&lt;blockquote data-sourcepos=&#34;5:1-5:72&#34;&gt;
&lt;p data-sourcepos=&#34;5:3-5:72&#34;&gt;&lt;code&gt;--set-build-env-vars&lt;/code&gt; と &lt;code&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;出典&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://qiita.com/popapipapapi/items/ab03a5dd51b186588f0d&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Qiita&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;収集日時&lt;/strong&gt;: 2025-09-14T14:54:22.607444&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/popapipapapi/items/ab03a5dd51b186588f0d&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;🔗 元記事を読む&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>📚 An API for Wellness Data and Physiological Signal Processing</title>
        <link>https://firebird-techtalktech.com/post/an-api-for-wellness-data-and-physiological-signal-processing/</link>
        <pubDate>Sun, 14 Sep 2025 14:54:52 +0900</pubDate>
        
        <guid>https://firebird-techtalktech.com/post/an-api-for-wellness-data-and-physiological-signal-processing/</guid>
        <description>&lt;h2 id=&#34;記事概要&#34;&gt;記事概要
&lt;/h2&gt;&lt;p&gt;Hello devs,  During my PhD research in physiological signal processing, I often felt like I was&amp;hellip;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;出典&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://dev.to/luke_32c618cbd316e2250257/an-api-for-wellness-data-and-physiological-signal-processing-6dl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Dev.to&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;収集日時&lt;/strong&gt;: 2025-09-14T14:54:24.910341&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://dev.to/luke_32c618cbd316e2250257/an-api-for-wellness-data-and-physiological-signal-processing-6dl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;🔗 元記事を読む&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>📚 OpenAI と Anthropic（Claude）の JSON スキーマ／ツール呼び出し／マルチモーダル／SSE 比較</title>
        <link>https://firebird-techtalktech.com/post/openai-%E3%81%A8-anthropicclaude%E3%81%AE-json-%E3%82%B9%E3%82%AD%E3%83%BC%E3%83%9E%E3%83%84%E3%83%BC%E3%83%AB%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E3%83%9E%E3%83%AB%E3%83%81%E3%83%A2%E3%83%BC%E3%83%80%E3%83%ABsse-%E6%AF%94%E8%BC%83/</link>
        <pubDate>Sun, 14 Sep 2025 14:54:52 +0900</pubDate>
        
        <guid>https://firebird-techtalktech.com/post/openai-%E3%81%A8-anthropicclaude%E3%81%AE-json-%E3%82%B9%E3%82%AD%E3%83%BC%E3%83%9E%E3%83%84%E3%83%BC%E3%83%AB%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E3%83%9E%E3%83%AB%E3%83%81%E3%83%A2%E3%83%BC%E3%83%80%E3%83%ABsse-%E6%AF%94%E8%BC%83/</guid>
        <description>&lt;h2 id=&#34;記事概要&#34;&gt;記事概要
&lt;/h2&gt;&lt;p data-sourcepos=&#34;1:1-1:250&#34;&gt;OpenAI と Anthropic（Claude）それぞれの LLM API における JSON スキーマ／構造化出力（structured JSON, function/tool calling, schema‐enforcement etc.）の違いを比較し用途や特徴なども含めて整理しました。&lt;/p&gt;
&lt;h3 data-sourcepos=&#34;3:1-3:13&#34;&gt;
&lt;span id=&#34;共通点&#34; class=&#34;fragment&#34;&gt;&lt;/span&gt;&lt;a href=&#34;#%E5%85%B1%E9%80%9A%E7%82%B9&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt;&lt;/a&gt;共通点&lt;/h3&gt;
&lt;p data-sourcepos=&#34;5:1-5:39&#34;&gt;まず、両者に共通する特徴：&lt;/p&gt;
&lt;ul data-sourcepos=&#34;7:1-11:0&#34;&gt;
&lt;li data-sourcepos=&#34;7:1-7:74&#34;&gt;プロンプト内で期待する JSON スキーマを指定できる。&lt;/li&gt;
&lt;li data-sourcepos=&#34;8:1-8
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;出典&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://qiita.com/nogataka/items/003b501dd9bd93f1b598&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Qiita&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;収集日時&lt;/strong&gt;: 2025-09-14T14:54:16.501869&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/nogataka/items/003b501dd9bd93f1b598&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;🔗 元記事を読む&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
